version: "2.3"

services:
  postgres:
    container_name: service-postgres
    image: postgres:12
    environment:
      POSTGRES_DB: pg_service_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "127.0.0.1:32775:5432"
    volumes:
      - ./postgresql/schemas:/docker-entrypoint-initdb.d
      - ./.pgdata:/var/lib/postgresql/data
    networks:
      - service

  service_template-container:
    image: ghcr.io/userver-framework/ubuntu-22.04-userver-pg:latest
    privileged: true
    environment:
      - PREFIX=${PREFIX:-~/.local}
      - CCACHE_DIR=/service_template/.ccache
      - CORES_DIR=/cores
    volumes:
      - .:/service_template:rw
    ports:
      - 8080:8080
    working_dir: /service_template
    entrypoint:
      - ./tests/run_as_user.sh
    depends_on:
      - postgres
      - zookeeper
      - kafka-ui
      - kafka-topics-generator
      - kafka
    networks:
      - service

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - service

  kafka:
    image: confluentinc/cp-server:7.2.1
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9997:9997"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9997
      KAFKA_JMX_HOSTNAME: kafka
    networks:
      - service

  kafka-topics-generator:
    image: confluentinc/cp-server:7.2.1
    depends_on:
      - kafka
      - zookeeper
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:29092 --list
      
      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic send-photo-data --replication-factor 1 --partitions 2
      
      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:29092 --list
      "
    networks:
      - service

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8082:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
    networks:
      - service
    depends_on:
      - kafka
      - zookeeper

networks:
    service:
        driver: bridge
